#!/usr/local/sbin/charm-env python3

import os
from charmhelpers.core import hookenv
from charms import layer
from reactive import snap


layer.import_layer_libs()


def partition(predicate, items):
    return (
        [item for item in items if predicate(item)],
        [item for item in items if not predicate(item)],
    )


def current_model(entity):
    model = os.environ['JUJU_MODEL_UUID']
    return model in entity


def is_global(entity):
    return len(entity.split('.')) == 3


try:
    # ensure /snap/bin is on the path
    snap.ensure_path()

    roles = layer.aws._list_roles()
    instance_profiles = layer.aws._list_instance_profiles()
    policies = [arn.split('/')[-1] for arn in layer.aws._list_policies()]

    model_roles, other_roles = partition(current_model, roles)
    model_ips, other_ips = partition(current_model, instance_profiles)
    global_policies, model_policies = partition(is_global, policies)
    model_policies, other_policies = partition(current_model, model_policies)

    hookenv.action_set({
        'model.roles': ', '.join(model_roles),
        'other.roles': ', '.join(other_roles),
        'model.instance-profiles': ', '.join(model_ips),
        'other.instance-profiles': ', '.join(other_ips),
        'global.policies': ', '.join(global_policies),
        'model.policies': ', '.join(model_policies),
        'other.policies': ', '.join(other_policies),
    })
except layer.aws.AWSError as e:
    hookenv.action_fail(e.message)
